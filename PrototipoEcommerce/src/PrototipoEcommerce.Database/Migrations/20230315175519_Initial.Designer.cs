// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrototipoEcommerce.Database.Context;

#nullable disable

namespace PrototipoEcommerce.Database.Migrations
{
    [DbContext(typeof(PrototipoContext))]
    [Migration("20230315175519_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.CarrinhoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Carrinho", (string)null);
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.ItemCarrinhoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CarrinhoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemCarrinho", (string)null);
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.ProdutoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PromocaoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("PromocaoId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.PromocaoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParaAplicar")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.HasKey("Id");

                    b.ToTable("Promocao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nome = "3 por R$ 10,00",
                            QuantidadeParaAplicar = 3,
                            Tipo = 0,
                            Valor = 10m
                        },
                        new
                        {
                            Id = 2L,
                            Nome = "Leve 2 e Pague 1",
                            QuantidadeParaAplicar = 2,
                            Tipo = 1,
                            Valor = 0.5m
                        });
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.ItemCarrinhoEntity", b =>
                {
                    b.HasOne("PrototipoEcommerce.Database.Entities.CarrinhoEntity", "Carrinho")
                        .WithMany("Itens")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrototipoEcommerce.Database.Entities.ProdutoEntity", "Produto")
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.ProdutoEntity", b =>
                {
                    b.HasOne("PrototipoEcommerce.Database.Entities.PromocaoEntity", "Promocao")
                        .WithMany("Produtos")
                        .HasForeignKey("PromocaoId");

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.CarrinhoEntity", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.ProdutoEntity", b =>
                {
                    b.Navigation("ItensCarrinho");
                });

            modelBuilder.Entity("PrototipoEcommerce.Database.Entities.PromocaoEntity", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
